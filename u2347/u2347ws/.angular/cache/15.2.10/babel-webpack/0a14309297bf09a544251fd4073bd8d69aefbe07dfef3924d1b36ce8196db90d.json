{"ast":null,"code":"import { MeetingRoom } from './meeting-room';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MeetingRoomService {\n  constructor(http) {\n    this.http = http;\n    this.formData = new MeetingRoom();\n    this.rootUrl = 'https://localhost:5160/MeetingRooms';\n    this.list = [];\n  }\n  getList() {\n    this.http.get(this.rootUrl).subscribe({\n      next: resp => this.list = resp,\n      error: error => console.log(error)\n    });\n  }\n  getByID(id) {\n    this.http.get(this.rootUrl + `/${id}`).subscribe({\n      next: resp => this.formData = resp,\n      error: error => console.log(error)\n    });\n  }\n  static #_ = this.ɵfac = function MeetingRoomService_Factory(t) {\n    return new (t || MeetingRoomService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MeetingRoomService,\n    factory: MeetingRoomService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,gBAAgB;;;AAM5C,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHjB,KAAAC,QAAQ,GAAG,IAAIJ,WAAW,EAAE;IACnC,KAAAK,OAAO,GAAG,qCAAqC;IACxC,KAAAC,IAAI,GAAkB,EAAE;EACS;EACxCC,OAAOA,CAAA;IACL,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAgB,IAAI,CAACH,OAAO,CAAC,CACvCI,SAAS,CACR;MACEC,IAAI,EAAEC,IAAI,IAAI,IAAI,CAACL,IAAI,GAAGK,IAAI;MAC9BC,KAAK,EAAEA,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK;KAClC,CAAC;EACR;EACAG,OAAOA,CAACC,EAAU;IAChB,IAAI,CAACb,IAAI,CAACK,GAAG,CAAc,IAAI,CAACH,OAAO,GAAG,IAAIW,EAAE,EAAE,CAAC,CAChDP,SAAS,CAAC;MACTC,IAAI,EAAEC,IAAI,IAAI,IAAI,CAACP,QAAQ,GAAGO,IAAI;MAClCC,KAAK,EAAEA,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK;KAClC,CAAC;EACN;EAAC,QAAAK,CAAA;qBAnBUhB,kBAAkB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA;WAAlBrB,kBAAkB;IAAAsB,OAAA,EAAlBtB,kBAAkB,CAAAuB,IAAA;IAAAC,UAAA,EAFjB;EAAM","names":["MeetingRoom","MeetingRoomService","constructor","http","formData","rootUrl","list","getList","get","subscribe","next","resp","error","console","log","getByID","id","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"ignoreList":[],"sourceRoot":"","sources":["C:\\shared\\u2347\\u2347ws\\projects\\mod10\\src\\app\\shared\\meeting-room.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MeetingRoom } from './meeting-room';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MeetingRoomService {\n  public formData = new MeetingRoom();\n  rootUrl = 'https://localhost:5160/MeetingRooms'\n  public list: MeetingRoom[] = [];\n  constructor(private http: HttpClient) { }\n  getList() {\n    this.http.get<MeetingRoom[]>(this.rootUrl)\n      .subscribe(\n        {\n          next: resp => this.list = resp,\n          error: error => console.log(error)\n        });\n  }\n  getByID(id: number) {\n    this.http.get<MeetingRoom>(this.rootUrl + `/${id}`)\n      .subscribe({\n        next: resp => this.formData = resp,\n        error: error => console.log(error)\n      });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}