{"ast":null,"code":"import { MeetingRoom } from '../shared/meeting-room';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/meeting-room.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction MeetingRoomDetailComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cap_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", cap_r6.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cap_r6.text, \"\");\n  }\n}\nexport class MeetingRoomDetailComponent {\n  constructor(service) {\n    this.service = service;\n    this.capacity = [{\n      value: 5,\n      text: \"5人\"\n    }, {\n      value: 10,\n      text: \"10人\"\n    }, {\n      value: 15,\n      text: \"15人\"\n    }, {\n      value: 20,\n      text: \"20人\"\n    }, {\n      value: 30,\n      text: \"30人\"\n    }, {\n      value: 40,\n      text: \"40人\"\n    }, {\n      value: 50,\n      text: \"50人\"\n    }, {\n      value: 100,\n      text: \"100人\"\n    }, {\n      value: 200,\n      text: \"200人\"\n    }];\n  }\n  ngOnInit() {\n    this.resetForm();\n  }\n  resetForm(form) {\n    if (form != null) form.form.reset();\n    this.service.formData = new MeetingRoom();\n  }\n  insertRecord(form) {\n    this.service.postMeetingRoom().subscribe({\n      next: resp => {\n        this.resetForm(form);\n        this.service.getList();\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  updateRecord(form) {\n    this.service.putMeetingRoom().subscribe({\n      next: resp => {\n        this.resetForm(form);\n        this.service.getList();\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  onSubmit(form) {\n    if (this.service.formData.id == 0) this.insertRecord(form);else this.updateRecord(form);\n  }\n  static #_ = this.ɵfac = function MeetingRoomDetailComponent_Factory(t) {\n    return new (t || MeetingRoomDetailComponent)(i0.ɵɵdirectiveInject(i1.MeetingRoomService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MeetingRoomDetailComponent,\n    selectors: [[\"app-meeting-room-detail\"]],\n    decls: 29,\n    vars: 7,\n    consts: [[\"autocomplete\", \"off\", 3, \"submit\"], [\"form\", \"ngForm\"], [1, \"input-group\", \"mb-3\"], [1, \"input-group-text\", \"fa-solid\", \"fa-people-roof\"], [\"name\", \"name\", \"placeholder\", \"\\u6703\\u8B70\\u5BA4\\u540D\\u7A31\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [1, \"input-group-text\", \"fa-solid\", \"fa-users\"], [\"name\", \"size\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"size\", \"ngModel\"], [3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"input-group-text\", \"fa-solid\", \"fa-video\"], [1, \"form-control\"], [\"type\", \"checkbox\", \"aria-label\", \"Checkbox for following text input\", \"name\", \"projector\", 3, \"ngModel\", \"ngModelChange\"], [\"projector\", \"ngModel\"], [1, \"input-group-text\", \"fa-solid\", \"fa-tv\"], [\"type\", \"checkbox\", \"aria-label\", \"Checkbox for following text input\", \"name\", \"tv\", 3, \"ngModel\", \"ngModelChange\"], [\"tv\", \"ngModel\"], [1, \"d-grid\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"btn-lg\", \"btn-block\", 3, \"disabled\"], [1, \"fa-solid\", \"fa-database\"]],\n    template: function MeetingRoomDetailComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r7 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"submit\", function MeetingRoomDetailComponent_Template_form_submit_0_listener() {\n          i0.ɵɵrestoreView(_r7);\n          const _r0 = i0.ɵɵreference(1);\n          return i0.ɵɵresetView(ctx.onSubmit(_r0));\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelement(3, \"i\", 3);\n        i0.ɵɵelementStart(4, \"input\", 4, 5);\n        i0.ɵɵlistener(\"ngModelChange\", function MeetingRoomDetailComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.service.formData.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelement(7, \"i\", 6);\n        i0.ɵɵelementStart(8, \"select\", 7, 8);\n        i0.ɵɵlistener(\"ngModelChange\", function MeetingRoomDetailComponent_Template_select_ngModelChange_8_listener($event) {\n          return ctx.service.formData.size = $event;\n        });\n        i0.ɵɵelementStart(10, \"option\", 9);\n        i0.ɵɵtext(11, \"--- \\u8ACB\\u9078\\u64C7\\u6703\\u8B70\\u5BA4\\u5BB9\\u7D0D\\u4EBA\\u6B21 ---\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, MeetingRoomDetailComponent_option_12_Template, 2, 2, \"option\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 2);\n        i0.ɵɵelement(14, \"i\", 11);\n        i0.ɵɵelementStart(15, \"label\", 12)(16, \"input\", 13, 14);\n        i0.ɵɵlistener(\"ngModelChange\", function MeetingRoomDetailComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.service.formData.projector = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18, \" \\u6295\\u5F71\\u6A5F \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 2);\n        i0.ɵɵelement(20, \"i\", 15);\n        i0.ɵɵelementStart(21, \"label\", 12)(22, \"input\", 16, 17);\n        i0.ɵɵlistener(\"ngModelChange\", function MeetingRoomDetailComponent_Template_input_ngModelChange_22_listener($event) {\n          return ctx.service.formData.tv = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(24, \" \\u96FB\\u8996 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"div\", 18)(26, \"button\", 19);\n        i0.ɵɵelement(27, \"i\", 20);\n        i0.ɵɵtext(28, \" Submit \");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.service.formData.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.service.formData.size);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngValue\", 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.capacity);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.service.formData.projector);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.service.formData.tv);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["MeetingRoom","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","cap_r6","value","ɵɵadvance","ɵɵtextInterpolate1","text","MeetingRoomDetailComponent","constructor","service","capacity","ngOnInit","resetForm","form","reset","formData","insertRecord","postMeetingRoom","subscribe","next","resp","getList","error","err","console","log","updateRecord","putMeetingRoom","onSubmit","id","_","ɵɵdirectiveInject","i1","MeetingRoomService","_2","selectors","decls","vars","consts","template","MeetingRoomDetailComponent_Template","rf","ctx","ɵɵlistener","MeetingRoomDetailComponent_Template_form_submit_0_listener","ɵɵrestoreView","_r7","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","MeetingRoomDetailComponent_Template_input_ngModelChange_4_listener","$event","name","MeetingRoomDetailComponent_Template_select_ngModelChange_8_listener","size","ɵɵtemplate","MeetingRoomDetailComponent_option_12_Template","MeetingRoomDetailComponent_Template_input_ngModelChange_16_listener","projector","MeetingRoomDetailComponent_Template_input_ngModelChange_22_listener","tv","invalid"],"ignoreList":[],"sourceRoot":"","sources":["C:\\shared\\u2347\\u2347ws\\projects\\mod10\\src\\app\\meeting-room-detail\\meeting-room-detail.component.ts","C:\\shared\\u2347\\u2347ws\\projects\\mod10\\src\\app\\meeting-room-detail\\meeting-room-detail.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MeetingRoomService } from '../shared/meeting-room.service';\nimport { NgForm } from '@angular/forms';\nimport { MeetingRoom } from '../shared/meeting-room';\n\n@Component({\n  selector: 'app-meeting-room-detail',\n  templateUrl: './meeting-room-detail.component.html',\n  styles: [\n  ]\n})\nexport class MeetingRoomDetailComponent {\n  constructor(public service: MeetingRoomService) { }\n  public capacity: any[] = [\n    { value: 5, text: \"5人\" }, { value: 10, text: \"10人\" },\n    { value: 15, text: \"15人\" }, { value: 20, text: \"20人\" },\n    { value: 30, text: \"30人\" }, { value: 40, text: \"40人\" },\n    { value: 50, text: \"50人\" }, { value: 100, text: \"100人\" },\n    { value: 200, text: \"200人\" }];\n ngOnInit() {\n    this.resetForm();\n  }\n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.form.reset();\n    this.service.formData = new MeetingRoom();\n  }\n  insertRecord(form: NgForm) {\n    this.service.postMeetingRoom().subscribe(\n      {\n        next: resp => {\n          this.resetForm(form);\n          this.service.getList();\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n  }\n  updateRecord(form: NgForm) {\n    this.service.putMeetingRoom().subscribe(\n      {\n        next: resp => {\n          this.resetForm(form);\n          this.service.getList();\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n  }\n  onSubmit(form: NgForm) {\n    if (this.service.formData.id == 0)\n      this.insertRecord(form);\n    else\n      this.updateRecord(form);\n  }\n\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n    <div class=\"input-group mb-3\">\n        <i class=\"input-group-text fa-solid fa-people-roof\"></i>\n        <input name=\"name\" class=\"form-control\" #name=\"ngModel\"\n        [(ngModel)]=\"service.formData.name\"\n placeholder=\"會議室名稱\" required >\n    </div>\n    <div class=\"input-group mb-3\">\n        <i class=\"input-group-text fa-solid fa-users\"></i>\n        <select name=\"size\" class=\"form-control\" required #size=\"ngModel\" [(ngModel)]=\"service.formData.size\">\n            <option [ngValue]=\"0\">--- 請選擇會議室容納人次 ---</option>\n            <option *ngFor=\"let cap of this.capacity\"  [ngValue]=\"cap.value\">\n                {{cap.text}}</option>\n        </select>\n    </div>\n    <div class=\"input-group mb-3\">\n        <i class=\"input-group-text fa-solid fa-video\"></i>\n        <label class=\"form-control\">\n            <input type=\"checkbox\" aria-label=\"Checkbox for following text input\" name=\"projector\" #projector=\"ngModel\"\n                [(ngModel)]=\"service.formData.projector\">\n            投影機\n        </label>\n    </div>\n    <div class=\"input-group mb-3\">\n        <i class=\"input-group-text fa-solid fa-tv\"></i>\n        <label class=\"form-control\">\n            <input type=\"checkbox\" aria-label=\"Checkbox for following text input\" name=\"tv\" #tv=\"ngModel\"\n                [(ngModel)]=\"service.formData.tv\">\n            電視\n        </label>\n    </div>\n    <div class=\"d-grid gap-2\">\n        <button class=\"btn btn-success btn-lg btn-block\" type=\"submit\" [disabled]=\"form.invalid\">\n            <i class=\"fa-solid fa-database\"></i> Submit\n        </button>\n    </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}