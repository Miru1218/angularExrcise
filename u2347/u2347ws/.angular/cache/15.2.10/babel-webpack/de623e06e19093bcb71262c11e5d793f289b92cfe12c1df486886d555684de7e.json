{"ast":null,"code":"import { MeetingRoom } from './meeting-room';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MeetingRoomService {\n  constructor(http) {\n    this.http = http;\n    this.formData = new MeetingRoom();\n    // rootUrl = 'http://localhost:5160/MeetingRooms'\n    this.rootUrl = '';\n    this.list = [];\n    this.rootUrl = environment.apiUrl;\n  }\n  getList() {\n    this.http.get(this.rootUrl).subscribe({\n      next: resp => this.list = resp,\n      error: error => console.log(error)\n    });\n  }\n  getByID(id) {\n    this.http.get(this.rootUrl + `/${id}`).subscribe({\n      next: resp => this.formData = resp,\n      error: error => console.log(error)\n    });\n  }\n  postMeetingRoom() {\n    return this.http.post(this.rootUrl, this.formData);\n  }\n  putMeetingRoom() {\n    return this.http.put(this.rootUrl + '/' + this.formData.id, this.formData);\n  }\n  deleteMeetingRoom(id) {\n    return this.http.delete(this.rootUrl + '/' + id);\n  }\n  static #_ = this.ɵfac = function MeetingRoomService_Factory(t) {\n    return new (t || MeetingRoomService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MeetingRoomService,\n    factory: MeetingRoomService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,gBAAgB;AAE5C,SAASC,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,kBAAkB;EAM7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALjB,KAAAC,QAAQ,GAAG,IAAIL,WAAW,EAAE;IACnC;IACA,KAAAM,OAAO,GAAG,EAAE;IAEL,KAAAC,IAAI,GAAkB,EAAE;IAE7B,IAAI,CAACD,OAAO,GAAGL,WAAW,CAACO,MAAM;EAGlC;EACDC,OAAOA,CAAA;IACL,IAAI,CAACL,IAAI,CAACM,GAAG,CAAgB,IAAI,CAACJ,OAAO,CAAC,CACvCK,SAAS,CACR;MACEC,IAAI,EAAEC,IAAI,IAAI,IAAI,CAACN,IAAI,GAAGM,IAAI;MAC9BC,KAAK,EAAEA,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK;KAClC,CAAC;EACR;EACAG,OAAOA,CAACC,EAAU;IAChB,IAAI,CAACd,IAAI,CAACM,GAAG,CAAc,IAAI,CAACJ,OAAO,GAAG,IAAIY,EAAE,EAAE,CAAC,CAChDP,SAAS,CAAC;MACTC,IAAI,EAAEC,IAAI,IAAI,IAAI,CAACR,QAAQ,GAAGQ,IAAI;MAClCC,KAAK,EAAEA,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK;KAClC,CAAC;EACN;EACAK,eAAeA,CAAA;IACb,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAC,IAAI,CAACd,OAAO,EAAE,IAAI,CAACD,QAAQ,CAAC;EACpD;EACAgB,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACjB,IAAI,CAACkB,GAAG,CAAC,IAAI,CAAChB,OAAO,GAAG,GAAG,GAAG,IAAI,CAACD,QAAQ,CAACa,EAAE,EAAE,IAAI,CAACb,QAAQ,CAAC;EAC5E;EACAkB,iBAAiBA,CAACL,EAAU;IAC1B,OAAO,IAAI,CAACd,IAAI,CAACoB,MAAM,CAAC,IAAI,CAAClB,OAAO,GAAG,GAAG,GAAGY,EAAE,CAAC;EAClD;EAAC,QAAAO,CAAA;qBAlCUvB,kBAAkB,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA;WAAlB5B,kBAAkB;IAAA6B,OAAA,EAAlB7B,kBAAkB,CAAA8B,IAAA;IAAAC,UAAA,EAFjB;EAAM","names":["MeetingRoom","environment","MeetingRoomService","constructor","http","formData","rootUrl","list","apiUrl","getList","get","subscribe","next","resp","error","console","log","getByID","id","postMeetingRoom","post","putMeetingRoom","put","deleteMeetingRoom","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"ignoreList":[],"sourceRoot":"","sources":["C:\\shared\\u2347\\u2347ws\\projects\\mod10\\src\\app\\shared\\meeting-room.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MeetingRoom } from './meeting-room';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MeetingRoomService {\n  public formData = new MeetingRoom();\n  // rootUrl = 'http://localhost:5160/MeetingRooms'\n  rootUrl = '';\n\n  public list: MeetingRoom[] = [];\n  constructor(private http: HttpClient) {\n    this.rootUrl = environment.apiUrl;\n\n\n   }\n  getList() {\n    this.http.get<MeetingRoom[]>(this.rootUrl)\n      .subscribe(\n        {\n          next: resp => this.list = resp,\n          error: error => console.log(error)\n        });\n  }\n  getByID(id: number) {\n    this.http.get<MeetingRoom>(this.rootUrl + `/${id}`)\n      .subscribe({\n        next: resp => this.formData = resp,\n        error: error => console.log(error)\n      });\n  }\n  postMeetingRoom() {\n    return this.http.post(this.rootUrl, this.formData);\n  }\n  putMeetingRoom() {\n    return this.http.put(this.rootUrl + '/' + this.formData.id, this.formData);\n  }\n  deleteMeetingRoom(id: number) {\n    return this.http.delete(this.rootUrl + '/' + id);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}